{"version":3,"sources":["logic/store.js","logic/local-storage-manager.js","logic/handlers.js","assets/audio/correct.mp3","assets/audio/incorrect.mp3","assets/audio/game-over.mp3","assets/audio/switch.mp3","assets/audio/close.mp3","components/game-field/expression-box.js","assets/icons/heart.svg","logic/consts.js","logic/define-action.js","components/game-field/game-status.js","components/game-field/variants/variant.js","components/game-field/variants/variants.js","components/start-game-button.js","components/modal-wrap.js","components/settings/audio-settings/audio-setting.js","components/settings/audio-settings/audio-settings-block.js","components/settings/numbers-range/number-range.js","components/settings/numbers-range/numbers-range-block.js","components/settings/choose-operator.js","components/settings/expression-length.js","components/settings/settings.js","components/keyboard-info.js","components/statistic/statistic-to-wrap.js","components/game-over.js","components/statistic/statistic-section.js","assets/icons/git.svg","components/footer.js","components/main.js","components/aside/aside-option.js","assets/icons/fullscreen-open.svg","assets/icons/fullscreen-close.svg","assets/icons/settings.svg","assets/icons/keyboard.svg","assets/icons/podium.svg","components/aside/aside.js","components/main-row.js","assets/audio/main-song.mp3","App.js","index.js"],"names":["Context","React","createContext","useStore","useContext","StoreProvider","children","useState","localStorageManager","get","gameField","settings","keyboardInfo","gameOver","statistic","sectionToShow","setSectionToShow","expression","correctAnswerIdx","userAnswerIdx","variants","mathContainer","setMathContainer","musicVolume","soundVolume","audioSettings","setAudioSettings","timeLeft","triesLeft","score","gameProgress","setGameProgress","minNumber","maxNumber","expressionLength","choseOperator","gameSettings","setGameSettings","history","setHistory","context","playingAnimation","setPlayingAnimation","Provider","value","key","localStorage","setItem","JSON","stringify","defaultValue","stored","getItem","parse","useHandlers","HandlersProvider","playSound","sound","audio","Audio","volume","play","switchSection","toShow","soundSwitch","switchedArr","Object","entries","map","field","switchedObj","fromEntries","set","closeSections","soundClose","saveAndReset","soundGameOver","date","curr","Date","getDate","slice","month","getMonth","hours","getHours","mins","getMinutes","operator","length","copy","historyUpd","push","reset","generateMathContainerDelayed","ms","setTimeout","generateMathContainer","updateTimer","updatedProgress","randomize","from","to","Math","round","random","shuffle","array","i","j","floor","min","max","exprLength","Number","choseOperators","newExpression","randNumber","randIdx","newResult","eval","newVariants","String","includes","newMathContainer","indexOf","defineUserAnswer","idx","gameProgressUpd","soundCorrect","extraScore","chooseOperator","calcScore","soundIncorrect","progressUpdated","regulateAudioVolume","data","target","valueConverted","regulated","setNumbersRange","updatedSettings","setExpressionLength","lengthSet","oper","newSettings","ExpressionBox","className","sectionsFlags","close","userAnswer","audioVolume","numbersRange","newMathContainerDelayed","useDefineAction","DefineActionProvider","defineAction","action","payload","consts","GameStatus","useEffect","intervalId","setInterval","clearInterval","tries","alt","src","heart","showTriesLeft","Variant","inner","handleClick","onClick","id","Variants","event","el","StartGameButton","ModalWrap","AudioSetting","name","handleChange","onChange","type","defineVisualVolume","source","AudioSettingsBlock","targ","musicVolumeVisual","soundVolumeVisual","NumberRange","onSubmit","e","preventDefault","maxLength","NumbersRangeBlock","ChooseOperator","checked","disabled","ExpressionLength","Settings","KeyboardInfo","StatisticToWrap","GameOver","StatisticSection","Footer","rel","href","logoGit","Main","startGame","AsideOption","iconSrc","openSection","fullscreen","console","log","Aside","setFullscreen","fullscreenIcon","setFullscreenIcon","document","fullscreenElement","webkitCancelFullScreen","cancelFullscreen","documentElement","webkitRequestFullscreen","keyboard","podium","MainRow","App","mainSong","song","musicPlaying","setMusicPlaying","loop","appWrapped","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.272ca09f.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { localStorageManager } from './local-storage-manager';\r\n\r\nconst Context = React.createContext();\r\nexport default function useStore() {\r\n  return useContext(Context);\r\n}\r\n\r\nexport const StoreProvider = ({ children }) => {\r\n\r\n  const [sectionToShow, setSectionToShow] = useState(\r\n    localStorageManager.get('sectionToShow', {\r\n      gameField: false,\r\n      settings: false,\r\n      keyboardInfo: false,\r\n      gameOver: false,\r\n      statistic: false,\r\n    })\r\n  );\r\n\r\n  const [mathContainer, setMathContainer] = useState(\r\n    localStorageManager.get('mathContainer', {\r\n      expression: null,\r\n      correctAnswerIdx: null,\r\n      userAnswerIdx: null,\r\n      variants: [],\r\n    })\r\n  );\r\n\r\n  const [audioSettings, setAudioSettings] = useState(\r\n    localStorageManager.get('audioSettings', {\r\n      musicVolume: 1,\r\n      soundVolume: 1,\r\n    })\r\n  );\r\n\r\n  const [gameProgress, setGameProgress] = useState(\r\n    localStorageManager.get('gameProgress', {\r\n      timeLeft: 25,\r\n      triesLeft: 4,\r\n      score: 0,\r\n    })\r\n  );\r\n\r\n  const [gameSettings, setGameSettings] = useState(\r\n    localStorageManager.get('gameSettings', {\r\n      minNumber: 1,\r\n      maxNumber: 20,\r\n      expressionLength: '1',\r\n      choseOperator: '+',\r\n    })\r\n  );\r\n\r\n  const [history, setHistory] = useState(\r\n    localStorageManager.get('history', [])\r\n  );\r\n\r\n  const [playingAnimation, setPlayingAnimation] = useState(\r\n    localStorageManager.get('playingAnimation', false)\r\n  );\r\n\r\n  const context = {\r\n    sectionToShow, \r\n    setSectionToShow,\r\n    \r\n    mathContainer, \r\n    setMathContainer,\r\n\r\n    gameSettings,\r\n    setGameSettings,\r\n\r\n    audioSettings,\r\n    setAudioSettings,\r\n\r\n    gameProgress,\r\n    setGameProgress,\r\n\r\n    playingAnimation,\r\n    setPlayingAnimation,\r\n\r\n    history, \r\n    setHistory\r\n  };\r\n\r\n  return (\r\n    <Context.Provider value={context}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};","class LocalStorageManager {\r\n  \r\n  set(key, value) {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n\r\n  get(key, defaultValue) {\r\n    const stored = localStorage.getItem(key);\r\n    if (stored !== null) {\r\n      return JSON.parse(stored);\r\n    } else {\r\n      return defaultValue;\r\n    }\r\n  }\r\n}\r\n\r\nexport const localStorageManager = new LocalStorageManager();","import React, { useContext } from 'react';\r\nimport { localStorageManager } from './local-storage-manager';\r\nimport useStore from './store';\r\nimport soundCorrect from \"../assets/audio/correct.mp3\";\r\nimport soundIncorrect from \"../assets/audio/incorrect.mp3\";\r\nimport soundGameOver from \"../assets/audio/game-over.mp3\";\r\nimport soundSwitch from \"../assets/audio/switch.mp3\";\r\nimport soundClose from \"../assets/audio/close.mp3\";\r\n\r\nconst Context = React.createContext();\r\nexport default function useHandlers() {\r\n  return useContext(Context);\r\n}\r\n\r\nexport const HandlersProvider = ({ children }) => {\r\n  \r\n  const {\r\n    sectionToShow, \r\n    setSectionToShow,\r\n    \r\n    mathContainer, \r\n    setMathContainer,\r\n\r\n    gameSettings,\r\n    setGameSettings,\r\n\r\n    audioSettings,\r\n    setAudioSettings,\r\n\r\n    gameProgress,\r\n    setGameProgress,\r\n\r\n    playingAnimation,\r\n    setPlayingAnimation,\r\n\r\n    history, \r\n    setHistory,\r\n  } = useStore();\r\n\r\n  const playSound = sound => {\r\n    const audio = new Audio(sound);\r\n    audio.volume = audioSettings.soundVolume;\r\n    audio.play();\r\n  };\r\n\r\n  const switchSection = toShow => {\r\n    if (playingAnimation && toShow !== 'gameOver') {\r\n      return;\r\n    } \r\n    playSound(soundSwitch);\r\n    const switchedArr = Object.entries(sectionToShow).map(field => (\r\n      field[0] === toShow \r\n      ? [ field[0], field[1] = true ]\r\n      : [ field[0], field[1] = false ]\r\n    ));\r\n    const switchedObj = Object.fromEntries(switchedArr);\r\n    setSectionToShow(switchedObj);\r\n    localStorageManager.set('sectionToShow', switchedObj);\r\n  };\r\n\r\n  const closeSections = () => {\r\n    playSound(soundClose);\r\n    const switchedArr = Object.entries(sectionToShow).map(field => (\r\n      [ field[0], field[1] = false ]\r\n    ));\r\n    const switchedObj = Object.fromEntries(switchedArr);\r\n    setSectionToShow(switchedObj);\r\n    localStorageManager.set('sectionToShow', switchedObj);\r\n  };\r\n\r\n  const saveAndReset = () => {\r\n    const getDate = () => {\r\n      const curr = new Date();\r\n\r\n      let date = '0' + curr.getDate();\r\n      date = date.slice(-2);\r\n\r\n      let month = '0' + curr.getMonth();\r\n      month = month.slice(-2);\r\n\r\n      let hours = '0' + curr.getHours();\r\n      hours = hours.slice(-2);\r\n\r\n      let mins = '0' + curr.getMinutes();\r\n      mins = mins.slice(-2);\r\n\r\n      return `${date}.${month} ${hours}:${mins}`;\r\n    }\r\n\r\n    playSound(soundGameOver);\r\n\r\n    const date = getDate();\r\n    const score = gameProgress.score;\r\n    const operator = gameSettings.choseOperator;\r\n    const length = gameSettings.expressionLength;\r\n\r\n    const copy = history.slice(-9);\r\n    const historyUpd = [date, score, operator, length];\r\n    copy.push(historyUpd);\r\n\r\n    setHistory(copy);\r\n    localStorageManager.set('history', copy);\r\n\r\n    const reset = { \r\n      score: 0,\r\n      triesLeft: 4, \r\n      timeLeft: 25,\r\n    };\r\n    setGameProgress(reset);\r\n    localStorageManager.set('gameProgress', reset);\r\n  };\r\n\r\n  const generateMathContainerDelayed = (ms=900) => {\r\n    if (!playingAnimation) {\r\n      setPlayingAnimation(true); \r\n      setTimeout(() => {\r\n        setPlayingAnimation(false);\r\n        generateMathContainer();\r\n        localStorageManager.set('playingAnimation', false);\r\n      }, ms);\r\n    }\r\n  };\r\n\r\n  const updateTimer = () => {\r\n    let updatedProgress = null;\r\n    if (!gameProgress.timeLeft && gameProgress.triesLeft < 2) {\r\n      updatedProgress = { \r\n        ...gameProgress, \r\n        triesLeft: gameProgress.triesLeft - 1,\r\n      };\r\n    } else if (!gameProgress.timeLeft) {\r\n      generateMathContainer();\r\n      updatedProgress = {\r\n        ...gameProgress, \r\n        triesLeft: gameProgress.triesLeft - 1, \r\n        timeLeft: 25,\r\n      };\r\n    } else {\r\n      updatedProgress = { \r\n        ...gameProgress, \r\n        timeLeft: gameProgress.timeLeft - 1 \r\n      };\r\n    }\r\n    setGameProgress(updatedProgress);\r\n    localStorageManager.set('gameProgress', updatedProgress);\r\n  };\r\n\r\n  const generateMathContainer = () => {\r\n    // ======== helpers =========\r\n    const randomize = (from, to) => {\r\n      return Math.round(Math.random() * (to - from) + from);\r\n    };\r\n\r\n    function shuffle(array) {\r\n      for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n      }\r\n    }\r\n    // ====== /helpers ==========\r\n\r\n    const min = gameSettings.minNumber;\r\n    const max = gameSettings.maxNumber;\r\n    const exprLength = Number(gameSettings.expressionLength);\r\n    const choseOperators = gameSettings.choseOperator;\r\n\r\n    let newExpression = '';\r\n    for (let i = 0; i < exprLength + 1; i++) {\r\n      const randNumber = randomize(min, max);\r\n\r\n      if (randNumber === 0) {\r\n        i--;\r\n        continue;\r\n      } else if (randNumber < 0) {\r\n        newExpression += `(${randNumber})`\r\n      } else {\r\n        newExpression += randNumber;\r\n      }\r\n\r\n      for (let j = 0; j < 1; j++) {\r\n        if (i >= exprLength) {\r\n          break;\r\n        }\r\n        const randIdx = randomize(0, choseOperators.length - 1);\r\n        newExpression += ` ${choseOperators[randIdx]} `;\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    const newResult = Math.round(eval(newExpression));\r\n\r\n    const newVariants = [];\r\n    newVariants.push(newResult);\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n      let from = newResult - 10 * String(newResult).length;\r\n      let to = newResult + 10 * String(newResult).length;\r\n      \r\n      if (from > to) {\r\n        [to, from] = [from, to];\r\n      }\r\n\r\n      const randNumber = randomize(from, to);\r\n      if (newVariants.includes(randNumber)) {\r\n        i--;\r\n      } else {\r\n        newVariants.push(randNumber);\r\n      }\r\n    }\r\n\r\n    shuffle(newVariants);\r\n\r\n    const newMathContainer = {\r\n      ...mathContainer,\r\n      expression: newExpression, \r\n      correctAnswerIdx: newVariants.indexOf(newResult),\r\n      variants: newVariants,\r\n    };\r\n\r\n    setMathContainer(newMathContainer);\r\n    localStorageManager.set('mathContainer', newMathContainer);\r\n  };\r\n  \r\n  const defineUserAnswer = idx => {\r\n\r\n    // ===== helpers ======\r\n    const calcScore = () => {\r\n      const initScore = 25;\r\n\r\n      let extraScore = Math.round(\r\n        (gameSettings.maxNumber - gameSettings.minNumber) / 6\r\n      ); \r\n      if (gameSettings.chooseOperator === '*') {\r\n        extraScore = Math.round(extraScore * 1.3);\r\n      }\r\n      if (gameSettings.expressionLength > 1) {\r\n        extraScore = Math.round(extraScore * 1.5);\r\n      }\r\n      return { score: gameProgress.score + initScore + extraScore };\r\n    };\r\n    // ===================\r\n\r\n    if (playingAnimation) {\r\n      return;\r\n    }\r\n    let sound = null;\r\n    let gameProgressUpd = null;\r\n    if (mathContainer.correctAnswerIdx === idx) {\r\n      sound = soundCorrect;\r\n      gameProgressUpd = calcScore();\r\n    } else {\r\n      sound = soundIncorrect;\r\n      gameProgressUpd = { triesLeft: gameProgress.triesLeft - 1 };\r\n    }\r\n    playSound(sound);\r\n\r\n    const progressUpdated = { ...gameProgress, ...gameProgressUpd, timeLeft: 25 };\r\n    setGameProgress(progressUpdated);\r\n    localStorageManager.set('gameProgress', progressUpdated);\r\n\r\n    setMathContainer({ ...mathContainer, userAnswerIdx: idx });\r\n  };\r\n\r\n  const regulateAudioVolume = data => {\r\n    const [target, value] = data;\r\n    const valueConverted = value / 10;\r\n    const regulated = { ...audioSettings, [target]: valueConverted };\r\n    setAudioSettings(regulated);\r\n    localStorageManager.set('audioSettings', regulated);\r\n  };\r\n\r\n  const setNumbersRange = data => {\r\n    const [target, value] = data;\r\n    const minNum = 'minNumber';\r\n    const maxNum = 'maxNumber';\r\n    \r\n    const min = gameSettings.minNumber;\r\n    const max = gameSettings.maxNumber;\r\n\r\n    if ((target === minNum && value >= max)\r\n      || (target === maxNum && min >= value)\r\n      || (value > 999 || value < -999)) {\r\n      return;\r\n    }\r\n    const updatedSettings = { ...gameSettings, [target]: Number(value) };\r\n    setGameSettings(updatedSettings)\r\n    localStorageManager.set('gameSettings', updatedSettings);\r\n  };\r\n  \r\n  const setExpressionLength = length => {\r\n    const lengthSet = { ...gameSettings, expressionLength: length };\r\n    setGameSettings(lengthSet);\r\n    localStorageManager.set('gameSettings', lengthSet);\r\n  };\r\n\r\n  const chooseOperator = oper => {\r\n    const newSettings = { ...gameSettings, choseOperator: oper };\r\n    setGameSettings(newSettings);\r\n    localStorageManager.set('gameSettings', newSettings);\r\n  };\r\n\r\n  const context = {\r\n    switchSection,\r\n    closeSections,\r\n    generateMathContainer,\r\n    defineUserAnswer,\r\n    regulateAudioVolume,\r\n    setNumbersRange,\r\n    setExpressionLength,\r\n    generateMathContainerDelayed,\r\n    chooseOperator,\r\n    updateTimer,\r\n    saveAndReset,\r\n  };\r\n\r\n  return (\r\n    <Context.Provider value={context}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};","export default __webpack_public_path__ + \"static/media/correct.1aed8624.mp3\";","export default __webpack_public_path__ + \"static/media/incorrect.346f3c9c.mp3\";","export default __webpack_public_path__ + \"static/media/game-over.f6cd5c1e.mp3\";","export default __webpack_public_path__ + \"static/media/switch.f25b5e65.mp3\";","export default __webpack_public_path__ + \"static/media/close.9b943bc2.mp3\";","import React from \"react\";\r\nimport useStore from \"../../logic/store\";\r\n\r\nconst ExpressionBox = () => {\r\n  \r\n  const { mathContainer } = useStore();\r\n\r\n  return (\r\n    <div className='expression-box'>\r\n      <div className='expression'>\r\n        {`${mathContainer.expression} =?`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpressionBox;","export default __webpack_public_path__ + \"static/media/heart.75942066.svg\";","export const gameField = 'gameField';\r\nexport const settings = 'settings';\r\nexport const keyboardInfo = 'keyboardInfo';\r\nexport const gameOver = 'gameOver';\r\nexport const statistic = 'statistic';\r\n\r\n// to open sections from aside\r\nexport const sectionsFlags = [gameField, settings, keyboardInfo, gameOver, statistic];\r\n\r\nexport const close = 'close';\r\nexport const newMathContainer = 'newMathContainer'; \r\nexport const userAnswer = 'userAnswer';\r\nexport const audioVolume = 'audioVolume';\r\nexport const numbersRange = 'numbersRange';\r\nexport const expressionLength = 'expressionLength';\r\nexport const newMathContainerDelayed = 'newMathContainerDelayed';\r\nexport const chooseOperator = 'chooseOperator';\r\nexport const updateTimer = 'updateTimer';","import React, { useContext } from \"react\";\r\nimport useHandlers from \"./handlers.js\";\r\nimport * as consts from \"./consts.js\";\r\n\r\nconst Context = React.createContext();\r\nexport default function useDefineAction() {\r\n  return useContext(Context);\r\n}\r\n\r\nexport const DefineActionProvider = ({ children }) => {\r\n\r\n  const { \r\n    switchSection,\r\n    closeSections,\r\n    generateMathContainer,\r\n    defineUserAnswer,\r\n    regulateAudioVolume,\r\n    setNumbersRange,\r\n    setExpressionLength,\r\n    generateMathContainerDelayed,\r\n    chooseOperator,\r\n    updateTimer,\r\n    saveAndReset,\r\n  } = useHandlers();\r\n\r\n  const defineAction = (action, payload) => {\r\n    if (consts.sectionsFlags.includes(action)) {\r\n      switchSection(action);\r\n    }\r\n    switch (action) {\r\n      case consts.close:\r\n        closeSections();\r\n        break;\r\n      case consts.newMathContainer:\r\n        generateMathContainer();\r\n        break;\r\n      case consts.userAnswer:\r\n        defineUserAnswer(payload);\r\n        break;\r\n      case consts.audioVolume:\r\n        regulateAudioVolume(payload);\r\n        break;\r\n      case consts.numbersRange: \r\n        setNumbersRange(payload);\r\n        break;\r\n      case consts.expressionLength:\r\n        setExpressionLength(payload);\r\n        break;\r\n      case consts.newMathContainerDelayed:\r\n        generateMathContainerDelayed();\r\n        break;\r\n      case consts.chooseOperator:\r\n        chooseOperator(payload);\r\n        break;\r\n      case consts.updateTimer:\r\n        updateTimer();\r\n        break;\r\n      case consts.gameOver: \r\n        saveAndReset();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Context.Provider value={{defineAction}}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};","import React, { useEffect } from \"react\";\r\nimport heart from \"../../assets/icons/heart.svg\";\r\nimport { updateTimer, gameOver } from \"../../logic/consts\";\r\nimport useDefineAction from \"../../logic/define-action\";\r\nimport useStore from \"../../logic/store\";\r\n\r\nconst GameStatus = () => {\r\n\r\n  const { gameProgress } = useStore();\r\n  const { defineAction } = useDefineAction();\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      if (!gameProgress.triesLeft && !gameProgress.timeLeft) {\r\n        defineAction(gameOver);\r\n      } else {\r\n        defineAction(updateTimer);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(intervalId);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!gameProgress.triesLeft) {\r\n      setTimeout(defineAction, 800, gameOver);\r\n    }\r\n  }, [gameProgress.triesLeft]);\r\n\r\n  const showTriesLeft = tries => {\r\n    const triesLeft = [];\r\n    for (let i = 0; i < tries; i++) {\r\n      triesLeft.push(\r\n        <img className='heart' alt='heart' src={heart} key={i} />\r\n      );\r\n    }\r\n    return triesLeft;\r\n  };\r\n\r\n  return(\r\n    <div className='game-status-wrap'>\r\n\r\n      <div className='score'>\r\n        {gameProgress.score}\r\n        <span className='unit'>pts</span>\r\n      </div>\r\n\r\n      <div className='hearts-box'>\r\n        {showTriesLeft(gameProgress.triesLeft)}\r\n      </div>\r\n\r\n      <div className={gameProgress.timeLeft < 6 ? 'timer hurry' : 'timer'}>\r\n        {gameProgress.timeLeft}\r\n        <span className='unit'>sec</span>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameStatus;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Variant = ({ inner, className, idx, handleClick }) => {\r\n  return(\r\n    <div className='variant-wrap scale-anim' onClick={handleClick}>\r\n      <div id={idx} className={`variant ${className}`}>\r\n        {inner}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nVariant.propTypes = {\r\n  inner: PropTypes.number,\r\n  className: PropTypes.string,\r\n  idx: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n};\r\n\r\nexport default Variant;","import React from \"react\";\r\nimport Variant from \"./variant\";\r\nimport { newMathContainerDelayed, userAnswer } from \"../../../logic/consts.js\";\r\nimport useDefineAction from \"../../../logic/define-action\";\r\nimport useStore from \"../../../logic/store\";\r\n\r\nconst Variants = () => {\r\n\r\n  const { defineAction } = useDefineAction();  \r\n  const { mathContainer } = useStore();\r\n  \r\n  const handleClick = event => {\r\n    defineAction(userAnswer, +event.target.id);\r\n    defineAction(newMathContainerDelayed);\r\n  };\r\n\r\n  const mapVariants = () => {\r\n    return mathContainer.variants.map((el, idx) => {\r\n      let className = '';\r\n\r\n      if (mathContainer.userAnswerIdx !== null) {\r\n        if (idx === mathContainer.userAnswerIdx) {\r\n          className='incorrect-answer';\r\n        }\r\n        if (idx === mathContainer.correctAnswerIdx) {\r\n          className='correct-answer';\r\n        }\r\n      }\r\n\r\n      return(\r\n        <Variant\r\n          className={className} \r\n          handleClick={handleClick}\r\n          idx={String(idx)}\r\n          key={idx} \r\n          inner={el} \r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return(\r\n    <div className='variants'>\r\n      {mapVariants()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Variants;","import React from \"react\";\r\nimport useDefineAction from \"../logic/define-action.js\"\r\nimport { gameField, newMathContainer } from \"../logic/consts.js\";\r\n\r\nconst StartGameButton = () => {\r\n  \r\n  const { defineAction } = useDefineAction();\r\n\r\n  const handleClick = () => {\r\n    defineAction(newMathContainer);\r\n    defineAction(gameField);\r\n  };\r\n\r\n  return(\r\n    <div className='start-btn-wrap'>\r\n      <div onClick={handleClick} className='start-btn scale-anim'>\r\n        start game\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartGameButton;","import React from \"react\";\r\nimport useDefineAction from \"../logic/define-action\";\r\nimport { close } from \"../logic/consts.js\";\r\n\r\nconst ModalWrap = ({ children }) => {\r\n\r\n  const { defineAction } = useDefineAction();\r\n\r\n  const handleCloseClick = () => {\r\n    defineAction(close);\r\n  };\r\n\r\n  return(\r\n    <div className='modal-wrap'>\r\n      <div className='modal-content'>\r\n        <div onClick={handleCloseClick} className='modal-close' />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalWrap;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AudioSetting = ({ name, handleChange, id, volume }) => {\r\n  return(\r\n    <div className='multiply-setting-wrap'>\r\n      <div>\r\n        <span>{name}</span>\r\n        <br />\r\n        <input \r\n          id={id}\r\n          onChange={handleChange}\r\n          className='slider'\r\n          type='range'\r\n          min='0' \r\n          max='10'\r\n          value={volume}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAudioSetting.propTypes = {\r\n  name: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  id: PropTypes.string,\r\n  volume: PropTypes.number,\r\n};\r\n\r\nexport default AudioSetting;","import React from \"react\";\r\nimport useStore from \"../../../logic/store.js\";\r\nimport AudioSettingBlock from \"./audio-setting.js\";\r\nimport { audioVolume } from \"../../../logic/consts.js\";\r\nimport useDefineAction from \"../../../logic/define-action.js\";\r\n\r\nconst defineVisualVolume = (source) => (\r\n  source === 0 ? 'off' : source * 100 + '%'\r\n);\r\n\r\nconst AudioSettingsBlock = () => {\r\n\r\n  const { audioSettings } = useStore();\r\n  const { defineAction } = useDefineAction();\r\n\r\n  const handleChange = event => {\r\n    const targ = event.target;\r\n    defineAction(audioVolume, [targ.id, targ.value]);\r\n  };\r\n\r\n  const musicVolumeVisual = defineVisualVolume(audioSettings.musicVolume);\r\n  const soundVolumeVisual = defineVisualVolume(audioSettings.soundVolume);\r\n\r\n  return(\r\n    <div className='settings-block'>\r\n      <AudioSettingBlock \r\n        handleChange={handleChange} \r\n        name={`Music: ${musicVolumeVisual}`}\r\n        id={'musicVolume'}\r\n        volume={audioSettings.musicVolume * 10}\r\n      />\r\n      <AudioSettingBlock \r\n        handleChange={handleChange} \r\n        name={`Sound: ${soundVolumeVisual}`}\r\n        id={'soundVolume'}\r\n        volume={audioSettings.soundVolume * 10}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioSettingsBlock;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NumberRange = ({ name, id, handleChange, value }) => {\r\n  return(\r\n    <div className='multiply-setting-wrap'>\r\n      <form onSubmit={e => e.preventDefault()} className='number-range'>\r\n        <span>{`${name}:`}</span>\r\n        <input \r\n          id={id} \r\n          value={value}\r\n          onChange={handleChange}\r\n          type=\"number\"\r\n          maxLength=\"4\"\r\n          max=\"999\"\r\n          min=\"-999\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nNumberRange.propTypes = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  value: PropTypes.number\r\n};\r\n\r\nexport default NumberRange;","import React from \"react\";\r\nimport useDefineAction from \"../../../logic/define-action\";\r\nimport useStore from \"../../../logic/store\";\r\nimport NumberRange from \"./number-range\";\r\nimport { numbersRange } from \"../../../logic/consts.js\";\r\n\r\nconst NumbersRangeBlock = () => {\r\n\r\n  const { gameSettings } = useStore();\r\n  const { defineAction } = useDefineAction();\r\n\r\n  const handleChange = event => {\r\n    const targ = event.target;\r\n    defineAction(numbersRange, [targ.id, targ.value]);\r\n  };\r\n\r\n  return(\r\n    <div className='settings-block'> \r\n      <NumberRange \r\n        name={'Min number'}\r\n        id={'minNumber'} \r\n        handleChange={handleChange}\r\n        value={gameSettings.minNumber}\r\n      />\r\n      <NumberRange \r\n        name={'Max number'}\r\n        id={'maxNumber'} \r\n        handleChange={handleChange}\r\n        value={gameSettings.maxNumber}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumbersRangeBlock;","import React from \"react\";\r\nimport useStore from \"../../logic/store\";\r\nimport { chooseOperator } from \"../../logic/consts.js\";\r\nimport useDefineAction from \"../../logic/define-action\";\r\n\r\nconst ChooseOperator = () => {\r\n\r\n  const { gameSettings } = useStore();\r\n  const { defineAction } = useDefineAction();\r\n  \r\n  const handleChange = event => {\r\n    defineAction(chooseOperator, event.target.value);\r\n  };\r\n\r\n  return(\r\n    <form className='operators-choose'>\r\n      Choose operators:\r\n      <br />\r\n\r\n      <span className='option'>\r\n        <input\r\n          checked={gameSettings.choseOperator === \"+\"}\r\n          type=\"radio\" \r\n          value=\"+\" \r\n          name=\"operator\" \r\n          onChange={handleChange}\r\n        />\r\n        &nbsp;+ addition<br />\r\n      </span>\r\n\r\n      <span className='option'>\r\n        <input\r\n          checked={gameSettings.choseOperator === \"-\"}\r\n          type=\"radio\" \r\n          value=\"-\" \r\n          name=\"operator\" \r\n          onChange={handleChange}\r\n        />\r\n        &nbsp;- subtraction<br /> \r\n      </span>\r\n\r\n      <span className='option'>\r\n        <input\r\n          checked={gameSettings.choseOperator === \"*\"}\r\n          type=\"radio\" \r\n          value=\"*\" \r\n          name=\"operator\" \r\n          onChange={handleChange}\r\n        />\r\n        &nbsp;* multiplication<br /> \r\n      </span>\r\n\r\n      <span className='option'>\r\n        <input disabled type=\"radio\" value=\"/\" />\r\n        &nbsp;/ division\r\n      </span>\r\n\r\n   </form>\r\n  );\r\n};\r\n\r\nexport default ChooseOperator;","import React from \"react\";\r\nimport { expressionLength } from \"../../logic/consts.js\";\r\nimport useDefineAction from \"../../logic/define-action.js\";\r\nimport useStore from \"../../logic/store.js\";\r\n  \r\nconst ExpressionLength = () => {\r\n\r\n  const { defineAction } = useDefineAction();\r\n  const { gameSettings } = useStore();\r\n\r\n  const handleChange = event => {\r\n    defineAction(expressionLength, event.target.value);\r\n  };\r\n  \r\n  return(\r\n    <div className='settings-block'>\r\n      <form onSubmit={e => e.preventDefault()} >\r\n        <div>Expression length:</div>\r\n        <input \r\n          checked={gameSettings.expressionLength === '1'}\r\n          type=\"radio\" \r\n          value=\"1\"\r\n          name=\"expression-length\"\r\n          onChange={handleChange}\r\n        />\r\n        <span className='option'>&nbsp;1 operator</span>\r\n        <br />\r\n        <input \r\n          checked={gameSettings.expressionLength === '2'}\r\n          type=\"radio\" \r\n          value=\"2\"\r\n          name=\"expression-length\" \r\n          onChange={handleChange}\r\n        /> \r\n        <span className='option'>&nbsp;2 operators</span>\r\n      </form> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpressionLength;","import React from \"react\";\r\n\r\nimport ModalWrap from \"../modal-wrap\";\r\nimport AudioSettingsBlock from \"./audio-settings/audio-settings-block\";\r\nimport NumbersRangeBlock from \"./numbers-range/numbers-range-block\";\r\nimport ChooseOperator from \"./choose-operator\";\r\nimport ExpressionLength from \"./expression-length\";\r\n\r\nconst Settings = () => {\r\n  return(\r\n    <ModalWrap>\r\n      <AudioSettingsBlock />\r\n      <ExpressionLength />\r\n      <NumbersRangeBlock />\r\n      <ChooseOperator />\r\n    </ModalWrap>\r\n  );\r\n};\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport ModalWrap from \"./modal-wrap\";\r\n\r\nconst KeyboardInfo = () => {\r\n  return(\r\n    <ModalWrap>\r\n      <article className='keyboard-info'>\r\n        <h3>Keyboard info</h3>\r\n        <p>\r\n          Use keys from\r\n          &nbsp;<span className='key-descr'>1</span>&nbsp;\r\n          to \r\n          &nbsp;<span className='key-descr'>6</span>&nbsp;\r\n          to choose a variant then press\r\n          &nbsp;<span className='key-descr'>Enter</span>&nbsp;\r\n          to confirm your answer.\r\n          <br /><br />  \r\n          *I didnt have time to implement it :(\r\n        </p>\r\n      </article>     \r\n    </ModalWrap>\r\n  );\r\n};\r\n  \r\nexport default KeyboardInfo;","import React from 'react';\r\nimport useStore from '../../logic/store';\r\n\r\nconst StatisticToWrap = () => {\r\n\r\n  const { history } = useStore();\r\n\r\n  const generateRows = () => (\r\n    history.map((el, idx) => (\r\n      <tr key={idx}>\r\n        <td>{el[0]}</td>\r\n        <td>{el[1]}</td>\r\n        <td>{`\"${el[2]}\"`}</td>\r\n        <td>{el[3]}</td>\r\n      </tr>\r\n    ))\r\n  );\r\n\r\n  return (\r\n    <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Date</th>\r\n        <th>Points</th>\r\n        <th>Operator</th>\r\n        <th>Length</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {generateRows()}\r\n    </tbody>\r\n   </table>\r\n  );\r\n};\r\n\r\nexport default StatisticToWrap;","import React from \"react\";\r\nimport ModalWrap from \"./modal-wrap\";\r\nimport StatisticToWrap from \"./statistic/statistic-to-wrap\";\r\n\r\nconst GameOver = () => {\r\n  return(\r\n    <ModalWrap>\r\n      <div className='game-over'>\r\n        <h3>game over</h3>\r\n        <StatisticToWrap />\r\n      </div>\r\n    </ModalWrap>\r\n  );\r\n};\r\n\r\nexport default GameOver;","import React from 'react';\r\nimport ModalWrap from '../modal-wrap';\r\nimport StatisticToWrap from './statistic-to-wrap';\r\n\r\nconst StatisticSection = () => {\r\n  return(\r\n    <ModalWrap>\r\n      <StatisticToWrap />\r\n    </ModalWrap>\r\n  );\r\n};\r\n\r\nexport default StatisticSection;","export default __webpack_public_path__ + \"static/media/git.f5722355.svg\";","import React from \"react\";\r\nimport logoGit from \"../assets/icons/git.svg\";\r\n\r\nconst Footer = () => {\r\n  return(\r\n    <footer className='footer'>\r\n      <a rel=\"noreferrer\" href=\"https://rs.school/react/\" target=\"_blank\">\r\n        <img \r\n          className='link-icon' \r\n          src='https://rs.school/images/rs_school_js.svg' \r\n          alt='rs-school'\r\n        />\r\n      </a>\r\n      <span className='prj-year'>2021</span>\r\n      <a rel=\"noreferrer\" href=\"https://github.com/NagievR\" target=\"_blank\">\r\n        <img \r\n          className='link-icon' \r\n          src={logoGit} \r\n          alt='my-git'\r\n        />\r\n      </a>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport useStore from \"../logic/store.js\";\r\n\r\nimport ExpressionBox from \"./game-field/expression-box.js\";\r\nimport GameStatus from \"./game-field/game-status.js\";\r\nimport Variants from \"./game-field/variants/variants.js\";\r\nimport StartGameButton from \"./start-game-button.js\";\r\nimport Settings from \"./settings/settings.js\";\r\nimport KeyboardInfo from \"./keyboard-info.js\";\r\nimport GameOver from \"./game-over.js\";\r\nimport StatisticSection from \"./statistic/statistic-section.js\";\r\nimport Footer from \"./footer.js\";\r\n\r\nconst Main = () => {\r\n\r\n  const { sectionToShow } = useStore();\r\n\r\n  const gameField = (\r\n    <>\r\n      <ExpressionBox />\r\n      <GameStatus />\r\n      <Variants />\r\n    </>\r\n  );\r\n  const settings = <Settings />;\r\n  const keyboardInfo = <KeyboardInfo />;\r\n  const gameOver = <GameOver />\r\n  const startGame = <StartGameButton />;\r\n  const statistic = <StatisticSection />\r\n\r\n  return(\r\n    <main className='main'>\r\n      {\r\n        (sectionToShow.gameField && gameField)\r\n        || (sectionToShow.settings && settings)\r\n        || (sectionToShow.keyboardInfo && keyboardInfo)\r\n        || (sectionToShow.statistic && statistic)\r\n        || (sectionToShow.gameOver && gameOver)\r\n        || startGame\r\n      }\r\n      <Footer />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AsideOption = ({ iconSrc, openSection, fullscreen }) => {\r\n\r\n  const handleClick = () => {\r\n    if (openSection) {\r\n      openSection();\r\n    } else if (fullscreen) {\r\n      fullscreen();\r\n    } else {\r\n      console.log('unknown');\r\n    }\r\n  };\r\n\r\n  return(\r\n    <div onClick={handleClick} className='aside-option-wrap'>\r\n      <img \r\n        className='aside-option scale-anim' \r\n        src={iconSrc} \r\n        alt='icon' \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nAsideOption.propTypes = {\r\n  iconSrc: PropTypes.string,\r\n  openSection: PropTypes.func,\r\n  fullscreen: PropTypes.func,\r\n};\r\n\r\nexport default AsideOption;","export default __webpack_public_path__ + \"static/media/fullscreen-open.3a52c44c.svg\";","export default __webpack_public_path__ + \"static/media/fullscreen-close.c721af96.svg\";","export default __webpack_public_path__ + \"static/media/settings.c2c79171.svg\";","export default __webpack_public_path__ + \"static/media/keyboard.086bf56b.svg\";","export default __webpack_public_path__ + \"static/media/podium.07f29882.svg\";","import React, { useState } from \"react\";\r\nimport AsideOption from \"./aside-option.js\";\r\nimport * as consts from \"../../logic/consts.js\";\r\nimport useDefineAction from \"../../logic/define-action.js\";\r\n\r\n// icons\r\nimport setFullscreen from \"../../assets/icons/fullscreen-open.svg\";\r\nimport cancelFullscreen from \"../../assets/icons/fullscreen-close.svg\";\r\nimport settings from \"../../assets/icons/settings.svg\";\r\nimport keyboard from \"../../assets/icons/keyboard.svg\";\r\nimport podium from \"../../assets/icons/podium.svg\";\r\n\r\nconst Aside = () => {\r\n\r\n  const [fullscreenIcon, setFullscreenIcon] = useState(setFullscreen); \r\n\r\n  const { defineAction } = useDefineAction();\r\n\r\n  const openSection = action => {\r\n    defineAction(action);\r\n  };\r\n\r\n  const toggleFullscreen = () => {\r\n    if (document.fullscreenElement) {\r\n      setFullscreenIcon(setFullscreen);\r\n      document.webkitCancelFullScreen();\r\n    } else {\r\n      setFullscreenIcon(cancelFullscreen);\r\n      document.documentElement.webkitRequestFullscreen();\r\n    }\r\n  };\r\n\r\n  return(\r\n    <div className='aside'>\r\n      <AsideOption\r\n        iconSrc={fullscreenIcon}\r\n        fullscreen={toggleFullscreen}\r\n      />\r\n      <AsideOption\r\n        openSection={() => openSection(consts.settings)}\r\n        iconSrc={settings}\r\n      />\r\n      <AsideOption\r\n        openSection={() => openSection(consts.keyboardInfo)}\r\n        iconSrc={keyboard}\r\n      />\r\n      <AsideOption\r\n        openSection={() => openSection(consts.statistic)}\r\n        iconSrc={podium}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Aside;","import React from \"react\";\r\n\r\nimport Main from \"./main.js\";\r\nimport Aside from \"./aside/aside.js\";\r\n\r\nconst MainRow = () => {\r\n  return(\r\n    <div className='main-row'>\r\n      <Main />\r\n      <Aside />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainRow;","export default __webpack_public_path__ + \"static/media/main-song.dda28f4c.mp3\";","import React, { useState, useEffect } from \"react\";\nimport \"./scss/main.scss\";\nimport MainRow from \"./components/main-row.js\";\nimport mainSong from \"./assets/audio/main-song.mp3\";\nimport useStore from \"./logic/store\";\n\nfunction App() {\n\n  const { audioSettings } = useStore();\n\n  const [song] = useState(new Audio(mainSong));\n  const [musicPlaying, setMusicPlaying] = useState(false);\n\n  useEffect(() => {\n    song.volume = audioSettings.musicVolume;\n  }, [audioSettings.musicVolume, song]);\n\n  const handleClick = () => {\n    if (musicPlaying) {\n      return;\n    }\n    song.play();\n    song.loop = true;\n    setMusicPlaying(true);\n  };\n\n  return ( \n    <div className='app' onClick={handleClick} >\n      <MainRow />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HandlersProvider } from './logic/handlers';\nimport { DefineActionProvider } from './logic/define-action';\nimport { StoreProvider } from './logic/store';\n\n\nconst appWrapped = (\n  <StoreProvider>\n    <HandlersProvider>\n      <DefineActionProvider>\n        <App />\n      </DefineActionProvider>\n    </HandlersProvider>\n  </StoreProvider>\n);\n\nReactDOM.render(\n  appWrapped,\n  document.getElementById('root')\n);"],"sourceRoot":""}